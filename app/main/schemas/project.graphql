scalar DateTime

type Project {
  key: String!
  name: String!
  deleted: Boolean
  description: String
  lastUpdatedAt: DateTime
  deletedAt: DateTime
  createdAt: DateTime
  startAt: DateTime
  endAt: DateTime
  area: Area
  items: [Item]
  sortOrder: ProjectOrder
}

input CreateProjectInput {
  key: String!
  name: String!
  description: String
  startAt: DateTime
  endAt: DateTime
  areaKey: String
}

input MigrateProjectInput {
  key: String!
  name: String
  deleted: Boolean
  description: String
  lastUpdatedAt: DateTime
  deletedAt: DateTime
  createdAt: DateTime
  startAt: DateTime
  endAt: DateTime
  areaKey: String
}

input DeleteProjectInput {
  key: String!
}

input RenameProjectInput {
  key: String!
  name: String!
}

input ChangeDescriptionProjectInput {
  key: String!
  description: String!
}

input SetEndDateOfProjectInput {
  key: String!
  endAt: String!
}

input SetStartDateOfProjectInput {
  key: String!
  startAt: String!
}

input ProjectsInput {
  deleted: Boolean
}

input ProjectsByAreaInput {
  areaKey: String!
}

input SetAreaOfProjectInput {
  key: String!
  areaKey: String!
}

type Query {
  projects(input: ProjectsInput): [Project]
  project(key: String!): Project
  projectsByArea(input: ProjectsByAreaInput!): [Project]
}

type Mutation {
  createProject(input: CreateProjectInput!): Project
  migrateProject(input: MigrateProjectInput!): Project
  deleteProject(input: DeleteProjectInput!): Project
  renameProject(input: RenameProjectInput!): Project
  changeDescriptionProject(input: ChangeDescriptionProjectInput!): Project
  setEndDateOfProject(input: SetEndDateOfProjectInput!): Project
  setStartDateOfProject(input: SetStartDateOfProjectInput!): Project
  setAreaOfProject(input: SetAreaOfProjectInput!): Project
}
