type Project {
  key: String!
  name: String
  deleted: Boolean
  description: String
  lastUpdatedAt: String
  deletedAt: String
  createdAt: String
  startAt: String
  endAt: String
  area: Area
}

input ProjectInput {
  key: String!
  name: String!
  deleted: Boolean!
  description: String
  lastUpdatedAt: String
  deletedAt: String
  createdAt: String
  startAt: String
  endAt: String
  areaKey: String
}

input DeleteProjectInput {
  key: String!
}

input RenameProjectInput {
  key: String!
  name: String!
}

input ChangeDescriptionProjectInput {
  key: String!
  description: String!
}

input SetEndDateOfProjectInput {
  key: String!
  endAt: String!
}

input SetStartDateOfProjectInput {
  key: String!
  startAt: String!
}

input SetProjectOrderInput {
  projectKey: String!
  newOrder: Int!
}

input CreateProjectOrderInput {
  projectKey: String!
}

type Query {
  projects: [Project]
  project(key: String!): Project
  projectsByArea(areaKey: String!): Project
}

type Mutation {
  createProject(input: ProjectInput!): Project
  deleteProject(input: DeleteProjectInput!): String
  renameProject(input: RenameProjectInput!): Project
  changeDescriptionProject(input: ChangeDescriptionProjectInput!): Project
  setEndDateOfProject(input: SetEndDateOfProjectInput!): Project
  setStartDateOfProject(input: SetStartDateOfProjectInput!): Project
}
